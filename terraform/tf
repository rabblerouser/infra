#! /bin/bash
# terraform/tf
# Run the Terraform command with correct dependency order for providers.
#
# This wrapper script works around a Terraform issue
# <URL:https://github.com/hashicorp/terraform/issues/2430> (unresolved
# as of 2017-07-25).

set -e
set -o pipefail

if [[ -z `which terraform` ]]; then
  echo 'Error: Install terraform before running this script'
  exit 1
fi

if [[ -z `which aws` ]]; then
  echo 'Error: Install the AWS SDK before running this script'
  exit 1
fi

if [[ -z `terraform version | grep v0.11` ]]; then
  echo 'Error: This script should only be run with terraform v0.11'
  exit 1
fi

function usage() {
  echo 'Usage:\n\t ./tf <COMMAND> [<MODULE>]'
  echo
  echo 'COMMAND: Either `plan` or `apply`'
  echo 'MODULE: Either `base`, `apps`, `seeder`, or omit to do both `base` and `apps`'
  echo
  echo 'Examples:'
  echo '\t./tf plan base'
  echo '\t./tf apply'
  echo '\t./tf apply seeder'
  exit 1
}

BASE="--target module.base"
APPS="--target module.apps"
SEED="--target module.seeder"

function run_terraform() {
  # We pipe the terraform output through a couple of commands to hide sensitive SSL certificates
  # The grep removes certs that are contained on a single line
  # The sed removes certs that are spread across multiple lines
  # TODO: Add the filtering back in. It causes problems now that `terraform apply` is interactive by default
  # eval terraform $@ | grep -ve '-----BEGIN.*-----END' | sed '/-----BEGIN/,/-----END/d'
  eval terraform $@
}

case "$1 $2" in
  "plan ")
  run_terraform plan "$BASE" "$APPS"
    ;;
  "plan base")
    run_terraform plan "$BASE"
    ;;
  "plan apps")
    run_terraform plan "$APPS"
    ;;
  "plan seeder")
    run_terraform plan "$SEED"
    ;;

  "apply ")
    run_terraform apply "$BASE" "$APPS"
    ;;
  "apply base")
    run_terraform apply "$BASE"
    ;;
  "apply apps")
    run_terraform apply "$APPS"
    ;;
  "apply seeder")
    run_terraform apply "$SEED"
    ;;
  *)
    usage
esac


# Local variables:
# coding: utf-8
# mode: shell-script
# sh-shell: bash
# End:
# vim: fileencoding=utf-8 filetype=bash :
